---
interface Collection {
  contentTypeId: "collection";
  fields: {
    collectionName: EntryFieldTypes.Text;
    description: EntryFieldTypes.Text;
    photos: EntryFieldTypes.AssetLink[];
    mainPhotos: EntryFieldTypes.AssetLink[];
  };
}

import slugify from "slugify";
import Layout from "../layouts/Layout.astro";
import Fullscreen from "../components/Fullscreen.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import MenuButton from "../components/MenuButton.astro";
import { contentfulClient } from "../lib/contentful";
import type { EntryFieldTypes } from "contentful";
import CollectionBody from "../components/CollectionBody.astro";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<Collection>({
    content_type: "collection",
  });

  const pages = entries.items.map((item) => ({
    params: {
      collection: slugify(item.fields.collectionName, {
        lower: true,
      }),
    },
    props: {
      title: item.fields.collectionName,
      photos: item.fields.photos as EntryFieldTypes.AssetLink[],
    },
  }));
  return pages;
}

const { title, photos } = Astro.props;
---

<Layout title={title}>
  <main>
    <Fullscreen />
    <Header title={title} />
    <CollectionBody>
      {
        photos
          .filter((obj: any) => "fields" in obj)
          .map((filtered: any, index: number) => {
            return (
              <div class="pic-cont">
                <Image
                  src={`https:${filtered.fields.file.url}`}
                  alt="An album photo"
                  width="1920"
                  height="1080"
                  loading={index === 0 ? "eager" : "lazy"}
                  data-lastlong={
                    index == photos.length - 1 && photos.length % 2 == 1
                      ? "true"
                      : "false"
                  }
                />
              </div>
            );
          })
      }
    </CollectionBody>
    <MenuButton class="menu-btn" />
    <Footer />
  </main>
</Layout>

<style>
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  main {
    position: relative;
  }
  @media screen and (min-width: 992px) {
    img {
      flex: 1;
    }
    .pic-cont {
      width: 40%;
      flex-grow: 1;
      display: flex;
      justify-content: center;
    }
    .last-img {
      width: 60%;
      flex-grow: 0;
    }
  }
</style>

<script src="../script.ts"></script>
<script>
  const last = document.querySelector(`[data-lastLong="true"]`);
  last?.classList.add("last-img");
</script>
