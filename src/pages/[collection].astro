---
interface Collection {
  contentTypeId: "collection";
  fields: {
    collectionName: EntryFieldTypes.Text;
    description: EntryFieldTypes.Text;
    photos: EntryFieldTypes.AssetLink[];
    mainPhotos: EntryFieldTypes.AssetLink[];
  };
}

import slugify from "slugify";
import Layout from "../layouts/Layout.astro";
import Fullscreen from "../components/Fullscreen.astro";
import Header from "../components/Header.astro";
import { contentfulClient } from "../lib/contentful";
import type { EntryFieldTypes } from "contentful";
import CollectionBody from "../components/CollectionBody.astro";

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<Collection>({
    content_type: "collection",
  });

  const pages = entries.items.map((item) => ({
    params: { collection: slugify(item.fields.collectionName).toLowerCase() },
    props: {
      title: item.fields.collectionName,
      description: item.fields.description,
      photos: item.fields.photos,
    },
  }));
  return pages;
}

const { title, description, photos } = Astro.props;
---

<Layout title={title}>
  <main>
    <Fullscreen />
    <Header title={title} />
    <CollectionBody>
      {
        photos
          .filter((obj: any) => "fields" in obj)
          .map((filtered: any) => {
            return <img src={`https:${filtered.fields.file.url}`} />;
          })
      }
    </CollectionBody>
  </main>
</Layout>

<style>
  img {
    width: 100%;
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  @media screen and (min-width: 992px) {
    img {
      width: 40%;
      flex: 1;
    }
    .container {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: 24px;
    }
  }
</style>

<script src="../script.ts"></script>
